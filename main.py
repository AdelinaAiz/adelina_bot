# –°–æ–∑–¥–∞–Ω–∏–µ Telegram Bot - –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å–æ –º–Ω–æ–π
import config
import db_state
import telebot
import random
from telebot import types

bot = telebot.TeleBot('6574375480:AAFDzPR6245hCD7zY9B-OTReCmf_fLKcvBU')


@bot.message_handler(commands=['start'])
def welcome(message):
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} üëã!\n'
                                      '–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–¥–µ–ª–∏–Ω–∞ üòÉ.\n' +
                     '–ë–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–º—É –±–æ—Ç—É, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –º–Ω–æ–π –ø–æ–±–ª–∏–∂–µ ‚ù§Ô∏è.')

    # –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_look = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëÄ')
    button_read = types.KeyboardButton('–ü–æ—á–∏—Ç–∞—Ç—å üìñ')
    button_listen = types.KeyboardButton('–ü–æ—Å–ª—É—à–∞—Ç—å üéß')
    button_link = types.KeyboardButton('–°—Å—ã–ª–∫–∞ ‚úÖ')
    button_advice = types.KeyboardButton('–°–æ–≤–µ—Ç ü§ì')
    keyboard.add(button_look, button_read, button_listen, button_link, button_advice)

    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    bot.send_message(message.chat.id, "–î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤–Ω–∏–∑—É —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ (–∞ —Ç–∞–∫–∂–µ –∫–æ–º–∞–Ω–¥—ã):\n"
                                      "1) /lookphoto - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.\n"
                                      "2) /readpost - –ü–æ—á–∏—Ç–∞—Ç—å –ø–æ—Å—Ç –æ –º–æ–µ–º –≥–ª–∞–≤–Ω–æ–º —É–≤–ª–µ—á–µ–Ω–∏–∏.\n"
                                      "3) /listenstory - –ü–æ—Å–ª—É—à–∞—Ç—å –º–æ–∏ –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç—ã.\n"
                                      "4) /getlink - –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π\n"
                                      "5) /advice - –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç",
                     reply_markup=keyboard)
    db_state.set_state(message.chat.id, config.States.s_all.value)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞



@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëÄ' or message.text == '/lookphoto':
            # –ú–æ–∂–Ω–æ —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ /lookphoto –ø—Ä–æ–ø–∏—Å–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
            markup_inline = types.InlineKeyboardMarkup()
            photo1 = types.InlineKeyboardButton(text='1 —Ñ–æ—Ç–æ', callback_data='photo_1')
            photo2 = types.InlineKeyboardButton(text='2 —Ñ–æ—Ç–æ', callback_data='photo_2')
            markup_inline.add(photo1, photo2)
            bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã–±–µ—Ä–µ—à—å?\n'
                                              '1) –ö—Ä–∞–π–Ω–µ–µ —Å–µ–ª—Ñ–∏\n'
                                              '2) –§–æ—Ç–æ –∏–∑ —Å—Ç–∞—Ä—à–µ–π —à–∫–æ–ª—ã',
                             reply_markup=markup_inline)
        elif message.text == '–ü–æ—á–∏—Ç–∞—Ç—å üìñ' or message.text == '/readpost':
            bot.send_message(message.chat.id, '–ú–æ–µ –≥–ª–∞–≤–Ω–æ–µ —Ö–æ–±–±–∏: —Ä–æ—Å–ø–∏—Å—å –æ–¥–µ–∂–¥—ã üé®.\n\n'
                                              '–Ø –≤—Å–µ–≥–¥–∞ –ª—é–±–∏–ª–∞ —Ä–∏—Å–æ–≤–∞—Ç—å. –ü–æ—ç—Ç–æ–º—É –≤ –¥–µ—Ç—Å—Ç–≤–µ –º–µ–Ω—è –æ—Ç–¥–∞–ª–∏ –≤ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é'
                                              ' —à–∫–æ–ª—É.\n–£—á–∏–ª–∞—Å—å —è –Ω–∞ –æ—Ç–ª–∏—á–Ω–æ, –ø–æ—ç—Ç–æ–º—É –≤—Å–µ –∑–Ω–∞–∫–æ–º—ã–µ –ø—Ä–æ—Ä–æ—á–∏–ª–∏ –º–Ω–µ '
                                              '–∫–∞—Ä—å–µ—Ä—É –¥–∏–∑–∞–π–Ω–µ—Ä–∞, —Ö—É–¥–æ–∂–Ω–∏–∫–∞, –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞.\n\n–ù–æ –±—É–∫–≤–∞–ª—å–Ω–æ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ '
                                              '–º–µ—Å—è—Ü–µ–≤ –¥–æ –ï–ì–≠ —è –æ—Ç–∫—Ä—ã–ª–∞ –¥–ª—è —Å–µ–±—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ. '
                                              '–û—á–Ω—É–ª–∞—Å—å —É–∂–µ, –∫–æ–≥–¥–∞ –ø–æ–¥–∞–ª–∞ —Å–≤–æ–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å'
                                              ' \"–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\". –ù–æ –¥–∞–Ω–Ω—ã–π —Ñ–∞–∫—Ç –Ω–µ –º–µ—à–∞–µ—Ç '
                                              '–º–Ω–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –±—Ä–∞—Ç—å –≤ —Ä—É–∫–∏ –∫–∏—Å—Ç—å –∏ —Ä–∏—Å–æ–≤–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–æ–≤–µ–Ω—å–∫–æ–µ'
                                              'üòâ.')
            bot.send_photo(message.chat.id, photo=open('media/images/drawing.JPG', 'rb'))
        elif message.text == '–ü–æ—Å–ª—É—à–∞—Ç—å üéß' or message.text == '/listenstory':
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏, —á—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª(–∞) –ø–æ—Å–ª—É—à–∞—Ç—å:\n\n"
                                              "1) –ß—Ç–æ —Ç–∞–∫–æ–µ GPT –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.\n"
                                              "2) –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É SQL –∏ noSQL.\n"
                                              "3) –ò—Å—Ç–æ—Ä–∏—è –º–æ–µ–π –ø–µ—Ä–≤–æ–π –ª—é–±–≤–∏ (–í—Å–µ —Å–æ–±—ã—Ç–∏—è –∏ –≥–µ—Ä–æ–∏ –≤—ã–º—ã—à–ª–µ–Ω—ã. "
                                              "–õ—é–±—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ª–∏—á–Ω–æ—Å—Ç—è–º–∏ —Å–ª—É—á–∞–π–Ω—ã.)\n\n"
                                              "–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞: \"–•–æ—á—É –ø–æ—Å–ª—É—à–∞—Ç—å –ø—Ä–æ sql\"\n"
                                              "–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: GPT, SQL, –ª—é–±–æ–≤—å.")
            db_state.set_state(message.chat.id, config.States.s_listen.value)  # –°–º–µ–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
        elif message.text == '–°—Å—ã–ª–∫–∞ ‚úÖ' or message.text == '/getlink':
            bot.send_message(message.chat.id, '–°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –º–æ–µ–≥–æ –±–æ—Ç–∞: https://ya.ru/')
        elif message.text == '–°–æ–≤–µ—Ç ü§ì' or message.text == '/advice':
            bot.send_photo(message.chat.id, photo=open(f'media/images/{random.randint(1, 5)}.JPG', 'rb'))
        else:  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–Ω–µ –∫–Ω–æ–ø–∫–∞)
            if db_state.get_state(message.chat.id) == config.States.s_listen.value:
                stories = dict(gpt=lambda x: open('media/audio/GPT.mp3', 'rb'),
                               sql=lambda x: open('media/audio/SQL.mp3', 'rb'),
                               –ª—é–±–æ–≤—å=lambda x: open('media/audio/LOVE.mp3', 'rb'))
                for key, value in stories.items():
                    if key in message.text.lower():
                        audio = stories[key](message)
                        bot.send_audio(message.chat.id, audio)
                        break
                else:
                    bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å —Å–Ω–æ–≤–∞.')
            else:
                bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ—Å–ª—É—à–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é,'
                                                  ' —Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É \"–ü–æ—Å–ª—É—à–∞—Ç—å üéß\"')

@bot.callback_query_handler(func=lambda call: True)
def view_photo(call):
    if call.data == 'photo_1':
        bot.send_photo(call.message.chat.id, photo=open("media/images/photo_1.jpg", 'rb'))
    elif call.data == 'photo_2':
        bot.send_photo(call.message.chat.id, photo=open("media/images/photo_2.jpg", 'rb'))


bot.polling(none_stop=True)
